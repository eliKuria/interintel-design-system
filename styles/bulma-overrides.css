/* * bulma-overrides.css
 * This file maps Bulma's default color classes to the custom properties
 * from the Material Theme Builder JSON. This allows you to integrate
 * your custom theme seamlessly with the Bulma framework.
 *
 * NOTE: This file assumes you have the Material Theme custom properties
 * defined in a parent stylesheet or directly in your :root selector.
 * For this example, we assume the light theme variables are the defaults.
 */

/* ==========================================================
   Base Colors & Backgrounds
   ========================================================== */

/*
 * These rules override Bulma's base background and text colors
 * to match the Material Design surface and on-surface colors.
 */
:root {
  /* Bulma's light theme variables, mapping to Material's light scheme */
  --bulma-body-background-color: var(--md-sys-color-background);
  --bulma-text: var(--md-sys-color-on-background);

  /* Light theme color mappings for Bulma classes */
  --bulma-primary: var(--md-sys-color-primary);
  --bulma-link: var(--md-sys-color-primary);
  --bulma-info: var(--md-sys-color-secondary);
  --bulma-success: var(--md-sys-color-tertiary); /* Arbitrarily chosen as there is no 'success' in the Material theme */
  --bulma-warning: #FFC107; /* Fallback for a standard warning color since the JSON doesn't define one */
  --bulma-danger: var(--md-sys-color-error);
  --bulma-light: var(--md-sys-color-surface-container-lowest);
  --bulma-dark: var(--md-sys-color-surface-container-highest);
}

.dark {
  /* Bulma's dark theme variables, mapping to Material's dark scheme */
  --bulma-body-background-color: var(--md-sys-color-background);
  --bulma-text: var(--md-sys-color-on-background);

  /* Dark theme color mappings for Bulma classes */
  --bulma-primary: var(--md-sys-color-primary);
  --bulma-link: var(--md-sys-color-primary);
  --bulma-info: var(--md-sys-color-secondary);
  --bulma-success: var(--md-sys-color-tertiary);
  --bulma-warning: #FFC107;
  --bulma-danger: var(--md-sys-color-error);
  --bulma-light: var(--md-sys-color-surface-container-lowest);
  --bulma-dark: var(--md-sys-color-surface-container-highest);
}

/* ==========================================================
   Bulma Class Overrides
   ========================================================== */

/*
 * This section redefines Bulma's color utility classes
 * to use the newly mapped CSS variables.
 */

/* Text colors */
.has-text-primary { color: var(--bulma-primary) !important; }
.has-text-info { color: var(--bulma-info) !important; }
.has-text-success { color: var(--bulma-success) !important; }
.has-text-warning { color: var(--bulma-warning) !important; }
.has-text-danger { color: var(--bulma-danger) !important; }
.has-text-light { color: var(--bulma-light) !important; }
.has-text-dark { color: var(--bulma-dark) !important; }

/* Background colors */
.has-background-primary { background-color: var(--bulma-primary) !important; }
.has-background-info { background-color: var(--bulma-info) !important; }
.has-background-success { background-color: var(--bulma-success) !important; }
.has-background-warning { background-color: var(--bulma-warning) !important; }
.has-background-danger { background-color: var(--bulma-danger) !important; }
.has-background-light { background-color: var(--bulma-light) !important; }
.has-background-dark { background-color: var(--bulma-dark) !important; }

/* Invert colors (for text on colored backgrounds) */
.has-text-primary-light { color: var(--md-sys-color-on-primary) !important; }
.has-text-info-light { color: var(--md-sys-color-on-secondary) !important; }
.has-text-success-light { color: var(--md-sys-color-on-tertiary) !important; }
.has-text-danger-light { color: var(--md-sys-color-on-error) !important; }

/* Button and element overrides (e.g., .is-primary for buttons) */
.is-primary {
  background-color: var(--bulma-primary);
  border-color: transparent;
  color: var(--md-sys-color-on-primary);
}
.is-primary.is-hovered,
.is-primary:hover {
  background-color: var(--md-sys-color-primary-fixed-dim);
  color: var(--md-sys-color-on-primary-fixed-variant);
}

.is-info {
  background-color: var(--bulma-info);
  border-color: transparent;
  color: var(--md-sys-color-on-secondary);
}
.is-info.is-hovered,
.is-info:hover {
  background-color: var(--md-sys-color-secondary-fixed-dim);
  color: var(--md-sys-color-on-secondary-fixed-variant);
}

.is-success {
  background-color: var(--bulma-success);
  border-color: transparent;
  color: var(--md-sys-color-on-tertiary);
}
.is-success.is-hovered,
.is-success:hover {
  background-color: var(--md-sys-color-tertiary-fixed-dim);
  color: var(--md-sys-color-on-tertiary-fixed-variant);
}

.is-danger {
  background-color: var(--bulma-danger);
  border-color: transparent;
  color: var(--md-sys-color-on-error);
}
.is-danger.is-hovered,
.is-danger:hover {
  background-color: var(--md-sys-color-error-container);
  color: var(--md-sys-color-on-error-container);
}

.is-light {
    background-color: var(--bulma-light);
    border-color: transparent;
    color: var(--md-sys-color-on-surface);
}

.is-dark {
    background-color: var(--bulma-dark);
    border-color: transparent;
    color: var(--md-sys-color-on-surface);
}

/* ----------------------------------Outlined text field CSS------------------------------------------------------- */
.outlined-textfield {
  display: block;
  position: relative;
  width: 100%;
  margin-bottom: 24px;
  margin-left: 50px;
  margin-top: 50px;
  margin-right: 50px;
}

.outlined-textfield-input {
  width: 100%;
  padding: 16px;
  border: 1px solid var(--md-sys-color-outline);
  border-radius: 4px;
  font-size: 16px;
  color: var(--md-sys-color-on-surface);
  background-color: transparent;
  outline: none;
  transition: border-color 0.2s ease;
}

.outlined-textfield-input:focus {
  border-color: var(--md-sys-color-primary);
}

.outlined-textfield-label {
  position: absolute;
  left: 12px;
  top: -9px;
  font-size: 12px;
  color: var(--md-sys-color-outline);
  background-color: var(--md-sys-color-surface-container-low);
  padding: 0 4px;
}

.outlined-textfield-input:focus + .outlined-textfield-label {
  color: var(--md-sys-color-primary);
}

/* Password toggle */
.password-container {
  position: relative;
}

.password-toggle-icon {
  position: absolute;
  right: 16px;
  top: 50%;
  transform: translateY(-50%);
  cursor: pointer;
  background: none;
  border: none;
}

.password-toggle-icon svg {
  width: 24px;
  height: 24px;
  fill: var(--md-sys-color-on-surface-variant);
}


/*-----------------------calling Simulation CSS--------------------------------------------*/

:root {
  --md-sys-color-primary-light: #1800AD;
  --md-sys-color-on-primary-light: #FFFFFF;
  --md-sys-color-surface-container-low-light: #F5F2FE;
  --md-sys-color-on-surface-light: #1B1B23;
  --md-sys-color-on-surface-variant-light: #464554;
  --md-sys-color-outline-light: #777586;
  --md-sys-color-secondary-light: #585993;
}

body {
  font-family: 'Inter', sans-serif;
  background-color: white; /* Changed to white */
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
}

/* Define the pulsating ring animation for the inner circles */
@keyframes pulse-ring {
  0% {
      transform: scale(0.9);
      opacity: 0.8;
  }
  100% {
      transform: scale(1.4);
      opacity: 0;
  }
}

/* Define the glowing border animation for the main container */
@keyframes glow-border {
  0% {
      box-shadow: 0 0 0 0px var(--md-sys-color-primary-light);
  }
  50% {
      box-shadow: 0 0 0 3px var(--md-sys-color-primary-light);
  }
  100% {
      box-shadow: 0 0 0 0px var(--md-sys-color-primary-light);
  }
}

/* Class to apply the animation when talking */
.is-talking {
  animation: pulse-ring 1.5s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

/* Styles for the timer card, now in the main CSS */
.timer-card {
  border: 2px solid var(--md-sys-color-primary-light);
  background-color: var(--md-sys-color-surface-container-low-light);
}

/* The main container styling, now with a set height */
.calling-container {
  background-color: var(--md-sys-color-surface-container-low-light);
  border-radius: 12px;
  padding: 8px;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  animation: glow-border 3s ease-in-out infinite; 
  height: 20rem; /* New fixed height for the container */
  width: 100%;
}

/* Styles for the "Me" and "Client" circles */
.user-circle {
  position: relative;
  width: 128px;
  height: 128px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: 600;
}

.client-circle {
  position: relative;
  width: 96px;
  height: 96px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.875rem;
}

.visualizer-ring {
  position: absolute;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  border: 3px solid;
  opacity: 0;
}

.client-view {
  position: absolute;
  bottom: 1rem;
  right: 1rem;
  background-color: white;
  padding: 0.5rem;
  border-radius: 8px;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 200px; /* Set a fixed width as per the design */
}
